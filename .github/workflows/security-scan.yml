name: Security Scanning

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays at midnight
  workflow_dispatch:  # Allow manual triggering
  push:
    branches: ["main", "develop", "enhancements"]
    paths:
      - '**/*.py'
      - 'requirements.txt'
      - 'api/requirements.txt'
      - 'Dockerfile'
      - '.github/workflows/security-scan.yml'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety
          pip install -r api/requirements.txt

      # Static Application Security Testing (SAST)
      - name: Run Bandit (Python SAST)
        run: |
          bandit -r . -x ./tests,./venv -f json -o bandit-results.json
          echo "Bandit scan completed. Results saved to bandit-results.json"

      # Dependency vulnerability scanning
      - name: Run Safety (Dependency Check)
        run: |
          safety check -r api/requirements.txt --json > safety-results.json
          echo "Safety scan completed. Results saved to safety-results.json"
        continue-on-error: true  # Don't fail the build on vulnerabilities, just report them

      # Upload scan results as artifacts
      - name: Upload security scan results
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            bandit-results.json
            safety-results.json

  docker-security-scan:
    runs-on: ubuntu-latest
    needs: security-scan
    env:
      REGION: europe-west2
      PROJECT_ID: tiny-llm-cicd
      REPOSITORY: tiny-llm-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image for scanning
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile
          push: false
          load: true
          tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.REPOSITORY }}:scan
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.REPOSITORY }}:scan
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  secrets-scanning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  security-report:
    runs-on: ubuntu-latest
    needs: [security-scan, docker-security-scan, secrets-scanning]
    steps:
      - name: Download security scan results
        uses: actions/download-artifact@v3
        with:
          name: security-scan-results
          path: security-results

      - name: Generate security report
        run: |
          echo "# Security Scan Report" > security-report.md
          echo "## Scan Date: $(date)" >> security-report.md
          echo "## Repository: ${{ github.repository }}" >> security-report.md
          echo "## Branch: ${{ github.ref_name }}" >> security-report.md
          echo "" >> security-report.md
          
          echo "### Bandit Results" >> security-report.md
          echo "Python code security issues found:" >> security-report.md
          echo '```' >> security-report.md
          cat security-results/bandit-results.json | jq -r '.results | length' >> security-report.md
          echo '```' >> security-report.md
          
          echo "### Safety Results" >> security-report.md
          echo "Dependency vulnerabilities found:" >> security-report.md
          echo '```' >> security-report.md
          cat security-results/safety-results.json | jq -r 'length' >> security-report.md
          echo '```' >> security-report.md
          
          echo "### Docker Image Scan" >> security-report.md
          echo "See GitHub Security tab for Trivy scan results" >> security-report.md
          
          echo "### Secrets Scanning" >> security-report.md
          echo "See job logs for TruffleHog results" >> security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md
